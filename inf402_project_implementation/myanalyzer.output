Terminals unused in grammar

    STRING


Grammar

    0 $accept: input $end

    1 input: result

    2 func_body: ε
    3          | var_assign func_body
    4          | conditions func_body
    5          | func_decl func_body

    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    8 parameters: ε
    9           | ID ':' type
   10           | ID '[' ']' ':' type
   11           | ID ':' type ',' parameters

   12 call_func: ID '(' func_input ')'

   13 func_input: ε
   14           | expr ',' func_input
   15           | expr

   16 var_assign: ID ':' type ';'
   17           | ID ',' var_assign
   18           | ID '=' expr ':' type ';'
   19           | ID '[' expr ']' ':' type ';'
   20           | KEYWORD_CONST var_assign

   21 var_update: ID '=' expr ';'
   22           | ID '[' expr ']' '=' expr ';'

   23 result: ε
   24       | var_assign result
   25       | func_decl result
   26       | main_func result
   27       | comp result

   28 conditions: var_update
   29           | call_func ';'
   30           | complex_array
   31           | ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | KEYWORD_BREAK ';'
   41           | KEYWORD_CONTINUE ';'
   42           | KEYWORD_RETURN ';'
   43           | KEYWORD_RETURN expr ';'

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

   45 more_conds: conditions
   46           | conditions more_conds

   47 statements: more_conds

   48 comp: KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';'

   49 comp_body: ε
   50          | comp_var_decl comp_body
   51          | func_decl comp_body

   52 comp_var_decl: HASHTAG_OP ID ':' type ';'
   53              | HASHTAG_OP ID ',' comp_var_decl

   54 expr: ID
   55     | DECIMAL
   56     | REAL
   57     | NUMBER
   58     | call_func
   59     | BOOLEAN_TRUE
   60     | BOOLEAN_FALSE
   61     | '+' expr
   62     | '-' expr
   63     | expr POWER_OP expr
   64     | expr '*' expr
   65     | expr '/' expr
   66     | expr '%' expr
   67     | expr '+' expr
   68     | expr '-' expr
   69     | '(' expr ')'
   70     | expr EQUAL_OP expr
   71     | expr NOTEQUAL_OP expr
   72     | expr LESSTHAN_OP expr
   73     | expr GREATERTHAN_OP expr
   74     | expr LESSTHANEQUAL_OP expr
   75     | expr GREATERTHANEQUAL_OP expr
   76     | expr KEYWORD_AND expr
   77     | expr KEYWORD_OR expr
   78     | expr KEYWORD_NOT expr
   79     | expr PLUSASSIGN_OP expr
   80     | expr MINUSASSIGN_OP expr
   81     | expr MULTASSIGN_OP expr
   82     | expr DIVASSIGN_OP expr
   83     | expr MODASSIGN_OP expr
   84     | '[' expr ']'
   85     | ';'

   86 type: KEYWORD_SCALAR
   87     | KEYWORD_INTEGER
   88     | KEYWORD_STR
   89     | KEYWORD_BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 66
    '(' (40) 6 7 12 33 34 39 69
    ')' (41) 6 7 12 33 34 39 69
    '*' (42) 64
    '+' (43) 36 38 61 67
    ',' (44) 11 14 17 53
    '-' (45) 7 35 37 62 68
    '/' (47) 65
    ':' (58) 6 7 9 10 11 16 18 19 31 32 33 34 35 36 37 38 39 44 48 52
    ';' (59) 6 7 16 18 19 21 22 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 48 52 85
    '=' (61) 18 21 22 31 32 44
    '[' (91) 10 19 22 31 32 35 36 37 38 44 84
    ']' (93) 10 19 22 31 32 35 36 37 38 44 84
    error (256)
    STRING <str> (258)
    ID <str> (259) 7 9 10 11 12 16 17 18 19 21 22 31 32 35 36 37 38 44 48 52 53 54
    NUMBER <str> (260) 57
    DECIMAL <str> (261) 31 55
    REAL <str> (262) 56
    KEYWORD_INTEGER (263) 87
    KEYWORD_SCALAR (264) 86
    KEYWORD_STR (265) 88
    KEYWORD_BOOLEAN (266) 89
    BOOLEAN_TRUE (267) 59
    BOOLEAN_FALSE (268) 60
    KEYWORD_CONST (269) 20
    KEYWORD_IF (270) 33 34
    KEYWORD_ELSE (271) 34
    KEYWORD_ENDIF (272) 33 34
    KEYWORD_FOR (273) 31 32 35 36 37 38 44
    KEYWORD_IN (274) 35 36 37 38 44
    KEYWORD_ENDFOR (275) 35 36 37 38
    KEYWORD_WHILE (276) 39
    KEYWORD_ENDWHILE (277) 39
    KEYWORD_BREAK (278) 40
    KEYWORD_CONTINUE (279) 41
    KEYWORD_DEF (280) 6 7
    KEYWORD_ENDDEF (281) 6 7
    KEYWORD_MAIN (282) 6
    KEYWORD_RETURN (283) 42 43
    KEYWORD_COMP (284) 48
    KEYWORD_ENDCOMP (285) 48
    KEYWORD_OF (286) 44
    POWER_OP (287) 63
    EQUAL_OP (288) 70
    NOTEQUAL_OP (289) 71
    LESSTHAN_OP (290) 72
    LESSTHANEQUAL_OP (291) 74
    GREATERTHAN_OP (292) 7 73
    GREATERTHANEQUAL_OP (293) 75
    PLUSASSIGN_OP (294) 79
    MINUSASSIGN_OP (295) 80
    MULTASSIGN_OP (296) 81
    DIVASSIGN_OP (297) 82
    MODASSIGN_OP (298) 83
    HASHTAG_OP (299) 52 53
    KEYWORD_NOT (300) 78
    KEYWORD_AND (301) 76
    KEYWORD_OR (302) 77


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    input (62)
        on left: 1
        on right: 0
    func_body <str> (63)
        on left: 2 3 4 5
        on right: 3 4 5 6 7
    main_func <str> (64)
        on left: 6
        on right: 26
    func_decl <str> (65)
        on left: 7
        on right: 5 25 51
    parameters <str> (66)
        on left: 8 9 10 11
        on right: 7 11
    call_func <str> (67)
        on left: 12
        on right: 29 58
    func_input <str> (68)
        on left: 13 14 15
        on right: 12 14
    var_assign <str> (69)
        on left: 16 17 18 19 20
        on right: 3 17 20 24
    var_update <str> (70)
        on left: 21 22
        on right: 28
    result <str> (71)
        on left: 23 24 25 26 27
        on right: 1 24 25 26 27
    conditions <str> (72)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 4 45 46
    complex_array <str> (73)
        on left: 44
        on right: 30
    more_conds <str> (74)
        on left: 45 46
        on right: 46 47
    statements <str> (75)
        on left: 47
        on right: 33 34 35 36 37 38 39
    comp <str> (76)
        on left: 48
        on right: 27
    comp_body <str> (77)
        on left: 49 50 51
        on right: 48 50 51
    comp_var_decl <str> (78)
        on left: 52 53
        on right: 50 53
    expr <str> (79)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
        on right: 14 15 18 19 21 22 31 32 33 34 35 36 37 38 39 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    type <str> (80)
        on left: 86 87 88 89
        on right: 7 9 10 11 16 18 19 31 32 44 52


State 0

    0 $accept: • input $end
    1 input: • result
    6 main_func: • KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   23 result: ε •  [$end]
   24       | • var_assign result
   25       | • func_decl result
   26       | • main_func result
   27       | • comp result
   48 comp: • KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';'

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2
    KEYWORD_DEF    shift, and go to state 3
    KEYWORD_COMP   shift, and go to state 4

    $default  reduce using rule 23 (result)

    input       go to state 5
    main_func   go to state 6
    func_decl   go to state 7
    var_assign  go to state 8
    result      go to state 9
    comp        go to state 10


State 1

   16 var_assign: ID • ':' type ';'
   17           | ID • ',' var_assign
   18           | ID • '=' expr ':' type ';'
   19           | ID • '[' expr ']' ':' type ';'

    ':'  shift, and go to state 11
    '['  shift, and go to state 12
    ','  shift, and go to state 13
    '='  shift, and go to state 14


State 2

   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   20           | KEYWORD_CONST • var_assign

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2

    var_assign  go to state 15


State 3

    6 main_func: KEYWORD_DEF • KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'
    7 func_decl: KEYWORD_DEF • ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    ID            shift, and go to state 16
    KEYWORD_MAIN  shift, and go to state 17


State 4

   48 comp: KEYWORD_COMP • ID ':' comp_body KEYWORD_ENDCOMP ';'

    ID  shift, and go to state 18


State 5

    0 $accept: input • $end

    $end  shift, and go to state 19


State 6

    6 main_func: • KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   23 result: ε •  [$end]
   24       | • var_assign result
   25       | • func_decl result
   26       | • main_func result
   26       | main_func • result
   27       | • comp result
   48 comp: • KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';'

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2
    KEYWORD_DEF    shift, and go to state 3
    KEYWORD_COMP   shift, and go to state 4

    $default  reduce using rule 23 (result)

    main_func   go to state 6
    func_decl   go to state 7
    var_assign  go to state 8
    result      go to state 20
    comp        go to state 10


State 7

    6 main_func: • KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   23 result: ε •  [$end]
   24       | • var_assign result
   25       | • func_decl result
   25       | func_decl • result
   26       | • main_func result
   27       | • comp result
   48 comp: • KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';'

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2
    KEYWORD_DEF    shift, and go to state 3
    KEYWORD_COMP   shift, and go to state 4

    $default  reduce using rule 23 (result)

    main_func   go to state 6
    func_decl   go to state 7
    var_assign  go to state 8
    result      go to state 21
    comp        go to state 10


State 8

    6 main_func: • KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   23 result: ε •  [$end]
   24       | • var_assign result
   24       | var_assign • result
   25       | • func_decl result
   26       | • main_func result
   27       | • comp result
   48 comp: • KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';'

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2
    KEYWORD_DEF    shift, and go to state 3
    KEYWORD_COMP   shift, and go to state 4

    $default  reduce using rule 23 (result)

    main_func   go to state 6
    func_decl   go to state 7
    var_assign  go to state 8
    result      go to state 22
    comp        go to state 10


State 9

    1 input: result •

    $default  reduce using rule 1 (input)


State 10

    6 main_func: • KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';'
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   23 result: ε •  [$end]
   24       | • var_assign result
   25       | • func_decl result
   26       | • main_func result
   27       | • comp result
   27       | comp • result
   48 comp: • KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';'

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2
    KEYWORD_DEF    shift, and go to state 3
    KEYWORD_COMP   shift, and go to state 4

    $default  reduce using rule 23 (result)

    main_func   go to state 6
    func_decl   go to state 7
    var_assign  go to state 8
    result      go to state 23
    comp        go to state 10


State 11

   16 var_assign: ID ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 28


State 12

   12 call_func: • ID '(' func_input ')'
   19 var_assign: ID '[' • expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 41


State 13

   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   17           | ID ',' • var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign

    ID             shift, and go to state 1
    KEYWORD_CONST  shift, and go to state 2

    var_assign  go to state 42


State 14

   12 call_func: • ID '(' func_input ')'
   18 var_assign: ID '=' • expr ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 43


State 15

   20 var_assign: KEYWORD_CONST var_assign •

    $default  reduce using rule 20 (var_assign)


State 16

    7 func_decl: KEYWORD_DEF ID • '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    '('  shift, and go to state 44


State 17

    6 main_func: KEYWORD_DEF KEYWORD_MAIN • '(' ')' ':' func_body KEYWORD_ENDDEF ';'

    '('  shift, and go to state 45


State 18

   48 comp: KEYWORD_COMP ID • ':' comp_body KEYWORD_ENDCOMP ';'

    ':'  shift, and go to state 46


State 19

    0 $accept: input $end •

    $default  accept


State 20

   26 result: main_func result •

    $default  reduce using rule 26 (result)


State 21

   25 result: func_decl result •

    $default  reduce using rule 25 (result)


State 22

   24 result: var_assign result •

    $default  reduce using rule 24 (result)


State 23

   27 result: comp result •

    $default  reduce using rule 27 (result)


State 24

   87 type: KEYWORD_INTEGER •

    $default  reduce using rule 87 (type)


State 25

   86 type: KEYWORD_SCALAR •

    $default  reduce using rule 86 (type)


State 26

   88 type: KEYWORD_STR •

    $default  reduce using rule 88 (type)


State 27

   89 type: KEYWORD_BOOLEAN •

    $default  reduce using rule 89 (type)


State 28

   16 var_assign: ID ':' type • ';'

    ';'  shift, and go to state 47


State 29

   12 call_func: ID • '(' func_input ')'
   54 expr: ID •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', KEYWORD_AND, KEYWORD_OR, ')', ':', ';', ']', ',']

    '('  shift, and go to state 48

    $default  reduce using rule 54 (expr)


State 30

   57 expr: NUMBER •

    $default  reduce using rule 57 (expr)


State 31

   55 expr: DECIMAL •

    $default  reduce using rule 55 (expr)


State 32

   56 expr: REAL •

    $default  reduce using rule 56 (expr)


State 33

   59 expr: BOOLEAN_TRUE •

    $default  reduce using rule 59 (expr)


State 34

   60 expr: BOOLEAN_FALSE •

    $default  reduce using rule 60 (expr)


State 35

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   61     | '+' • expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 49


State 36

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   62     | '-' • expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 50


State 37

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   69     | '(' • expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 51


State 38

   85 expr: ';' •

    $default  reduce using rule 85 (expr)


State 39

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   84     | '[' • expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 52


State 40

   58 expr: call_func •

    $default  reduce using rule 58 (expr)


State 41

   19 var_assign: ID '[' expr • ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 73


State 42

   17 var_assign: ID ',' var_assign •

    $default  reduce using rule 17 (var_assign)


State 43

   18 var_assign: ID '=' expr • ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 74


State 44

    7 func_decl: KEYWORD_DEF ID '(' • parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
    8 parameters: ε •  [')']
    9           | • ID ':' type
   10           | • ID '[' ']' ':' type
   11           | • ID ':' type ',' parameters

    ID  shift, and go to state 75

    $default  reduce using rule 8 (parameters)

    parameters  go to state 76


State 45

    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' • ')' ':' func_body KEYWORD_ENDDEF ';'

    ')'  shift, and go to state 77


State 46

    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   48 comp: KEYWORD_COMP ID ':' • comp_body KEYWORD_ENDCOMP ';'
   49 comp_body: ε •  [KEYWORD_ENDCOMP]
   50          | • comp_var_decl comp_body
   51          | • func_decl comp_body
   52 comp_var_decl: • HASHTAG_OP ID ':' type ';'
   53              | • HASHTAG_OP ID ',' comp_var_decl

    KEYWORD_DEF  shift, and go to state 78
    HASHTAG_OP   shift, and go to state 79

    $default  reduce using rule 49 (comp_body)

    func_decl      go to state 80
    comp_body      go to state 81
    comp_var_decl  go to state 82


State 47

   16 var_assign: ID ':' type ';' •

    $default  reduce using rule 16 (var_assign)


State 48

   12 call_func: • ID '(' func_input ')'
   12          | ID '(' • func_input ')'
   13 func_input: ε •  [')']
   14           | • expr ',' func_input
   15           | • expr
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    $default  reduce using rule 13 (func_input)

    call_func   go to state 40
    func_input  go to state 83
    expr        go to state 84


State 49

   61 expr: '+' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   63     | expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 61 (expr)

    Conflict between rule 61 and token POWER_OP resolved as reduce (POWER_OP < '+').
    Conflict between rule 61 and token EQUAL_OP resolved as shift ('+' < EQUAL_OP).
    Conflict between rule 61 and token NOTEQUAL_OP resolved as shift ('+' < NOTEQUAL_OP).
    Conflict between rule 61 and token LESSTHAN_OP resolved as shift ('+' < LESSTHAN_OP).
    Conflict between rule 61 and token LESSTHANEQUAL_OP resolved as shift ('+' < LESSTHANEQUAL_OP).
    Conflict between rule 61 and token GREATERTHAN_OP resolved as shift ('+' < GREATERTHAN_OP).
    Conflict between rule 61 and token GREATERTHANEQUAL_OP resolved as shift ('+' < GREATERTHANEQUAL_OP).
    Conflict between rule 61 and token PLUSASSIGN_OP resolved as shift ('+' < PLUSASSIGN_OP).
    Conflict between rule 61 and token MINUSASSIGN_OP resolved as shift ('+' < MINUSASSIGN_OP).
    Conflict between rule 61 and token MULTASSIGN_OP resolved as shift ('+' < MULTASSIGN_OP).
    Conflict between rule 61 and token DIVASSIGN_OP resolved as shift ('+' < DIVASSIGN_OP).
    Conflict between rule 61 and token MODASSIGN_OP resolved as shift ('+' < MODASSIGN_OP).
    Conflict between rule 61 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '+').
    Conflict between rule 61 and token '*' resolved as reduce ('*' < '+').
    Conflict between rule 61 and token '/' resolved as reduce ('/' < '+').
    Conflict between rule 61 and token '%' resolved as reduce ('%' < '+').
    Conflict between rule 61 and token '+' resolved as reduce (%left '+').
    Conflict between rule 61 and token '-' resolved as reduce (%left '-').
    Conflict between rule 61 and token KEYWORD_AND resolved as shift ('+' < KEYWORD_AND).
    Conflict between rule 61 and token KEYWORD_OR resolved as shift ('+' < KEYWORD_OR).


State 50

   62 expr: '-' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   63     | expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 62 (expr)

    Conflict between rule 62 and token POWER_OP resolved as reduce (POWER_OP < '-').
    Conflict between rule 62 and token EQUAL_OP resolved as shift ('-' < EQUAL_OP).
    Conflict between rule 62 and token NOTEQUAL_OP resolved as shift ('-' < NOTEQUAL_OP).
    Conflict between rule 62 and token LESSTHAN_OP resolved as shift ('-' < LESSTHAN_OP).
    Conflict between rule 62 and token LESSTHANEQUAL_OP resolved as shift ('-' < LESSTHANEQUAL_OP).
    Conflict between rule 62 and token GREATERTHAN_OP resolved as shift ('-' < GREATERTHAN_OP).
    Conflict between rule 62 and token GREATERTHANEQUAL_OP resolved as shift ('-' < GREATERTHANEQUAL_OP).
    Conflict between rule 62 and token PLUSASSIGN_OP resolved as shift ('-' < PLUSASSIGN_OP).
    Conflict between rule 62 and token MINUSASSIGN_OP resolved as shift ('-' < MINUSASSIGN_OP).
    Conflict between rule 62 and token MULTASSIGN_OP resolved as shift ('-' < MULTASSIGN_OP).
    Conflict between rule 62 and token DIVASSIGN_OP resolved as shift ('-' < DIVASSIGN_OP).
    Conflict between rule 62 and token MODASSIGN_OP resolved as shift ('-' < MODASSIGN_OP).
    Conflict between rule 62 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '-').
    Conflict between rule 62 and token '*' resolved as reduce ('*' < '-').
    Conflict between rule 62 and token '/' resolved as reduce ('/' < '-').
    Conflict between rule 62 and token '%' resolved as reduce ('%' < '-').
    Conflict between rule 62 and token '+' resolved as reduce (%left '+').
    Conflict between rule 62 and token '-' resolved as reduce (%left '-').
    Conflict between rule 62 and token KEYWORD_AND resolved as shift ('-' < KEYWORD_AND).
    Conflict between rule 62 and token KEYWORD_OR resolved as shift ('-' < KEYWORD_OR).


State 51

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   69     | '(' expr • ')'
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ')'                  shift, and go to state 85


State 52

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr
   84     | '[' expr • ']'

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 86


State 53

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   63     | expr POWER_OP • expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 87


State 54

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   70     | expr EQUAL_OP • expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 88


State 55

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   71     | expr NOTEQUAL_OP • expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 89


State 56

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   72     | expr LESSTHAN_OP • expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 90


State 57

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   74     | expr LESSTHANEQUAL_OP • expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 91


State 58

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   73     | expr GREATERTHAN_OP • expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 92


State 59

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   75     | expr GREATERTHANEQUAL_OP • expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 93


State 60

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   79     | expr PLUSASSIGN_OP • expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 94


State 61

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   80     | expr MINUSASSIGN_OP • expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 95


State 62

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   81     | expr MULTASSIGN_OP • expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 96


State 63

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   82     | expr DIVASSIGN_OP • expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 97


State 64

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   83     | expr MODASSIGN_OP • expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 98


State 65

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   78     | expr KEYWORD_NOT • expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 99


State 66

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   64     | expr '*' • expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 100


State 67

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   65     | expr '/' • expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 101


State 68

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   66     | expr '%' • expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 102


State 69

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   67     | expr '+' • expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 103


State 70

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   68     | expr '-' • expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 104


State 71

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   76     | expr KEYWORD_AND • expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 105


State 72

   12 call_func: • ID '(' func_input ')'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   77     | expr KEYWORD_OR • expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 106


State 73

   19 var_assign: ID '[' expr ']' • ':' type ';'

    ':'  shift, and go to state 107


State 74

   18 var_assign: ID '=' expr ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 108


State 75

    9 parameters: ID • ':' type
   10           | ID • '[' ']' ':' type
   11           | ID • ':' type ',' parameters

    ':'  shift, and go to state 109
    '['  shift, and go to state 110


State 76

    7 func_decl: KEYWORD_DEF ID '(' parameters • ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    ')'  shift, and go to state 111


State 77

    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' ')' • ':' func_body KEYWORD_ENDDEF ';'

    ':'  shift, and go to state 112


State 78

    7 func_decl: KEYWORD_DEF • ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    ID  shift, and go to state 16


State 79

   52 comp_var_decl: HASHTAG_OP • ID ':' type ';'
   53              | HASHTAG_OP • ID ',' comp_var_decl

    ID  shift, and go to state 113


State 80

    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   49 comp_body: ε •  [KEYWORD_ENDCOMP]
   50          | • comp_var_decl comp_body
   51          | • func_decl comp_body
   51          | func_decl • comp_body
   52 comp_var_decl: • HASHTAG_OP ID ':' type ';'
   53              | • HASHTAG_OP ID ',' comp_var_decl

    KEYWORD_DEF  shift, and go to state 78
    HASHTAG_OP   shift, and go to state 79

    $default  reduce using rule 49 (comp_body)

    func_decl      go to state 80
    comp_body      go to state 114
    comp_var_decl  go to state 82


State 81

   48 comp: KEYWORD_COMP ID ':' comp_body • KEYWORD_ENDCOMP ';'

    KEYWORD_ENDCOMP  shift, and go to state 115


State 82

    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   49 comp_body: ε •  [KEYWORD_ENDCOMP]
   50          | • comp_var_decl comp_body
   50          | comp_var_decl • comp_body
   51          | • func_decl comp_body
   52 comp_var_decl: • HASHTAG_OP ID ':' type ';'
   53              | • HASHTAG_OP ID ',' comp_var_decl

    KEYWORD_DEF  shift, and go to state 78
    HASHTAG_OP   shift, and go to state 79

    $default  reduce using rule 49 (comp_body)

    func_decl      go to state 80
    comp_body      go to state 116
    comp_var_decl  go to state 82


State 83

   12 call_func: ID '(' func_input • ')'

    ')'  shift, and go to state 117


State 84

   14 func_input: expr • ',' func_input
   15           | expr •  [')']
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ','                  shift, and go to state 118

    $default  reduce using rule 15 (func_input)


State 85

   69 expr: '(' expr ')' •

    $default  reduce using rule 69 (expr)


State 86

   84 expr: '[' expr ']' •

    $default  reduce using rule 84 (expr)


State 87

   63 expr: expr • POWER_OP expr
   63     | expr POWER_OP expr •  [KEYWORD_FOR, KEYWORD_OF, KEYWORD_NOT, ')', ':', ';', ']', ',']
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 63 (expr)

    Conflict between rule 63 and token POWER_OP resolved as shift (%right POWER_OP).
    Conflict between rule 63 and token EQUAL_OP resolved as shift (POWER_OP < EQUAL_OP).
    Conflict between rule 63 and token NOTEQUAL_OP resolved as shift (POWER_OP < NOTEQUAL_OP).
    Conflict between rule 63 and token LESSTHAN_OP resolved as shift (POWER_OP < LESSTHAN_OP).
    Conflict between rule 63 and token LESSTHANEQUAL_OP resolved as shift (POWER_OP < LESSTHANEQUAL_OP).
    Conflict between rule 63 and token GREATERTHAN_OP resolved as shift (POWER_OP < GREATERTHAN_OP).
    Conflict between rule 63 and token GREATERTHANEQUAL_OP resolved as shift (POWER_OP < GREATERTHANEQUAL_OP).
    Conflict between rule 63 and token PLUSASSIGN_OP resolved as shift (POWER_OP < PLUSASSIGN_OP).
    Conflict between rule 63 and token MINUSASSIGN_OP resolved as shift (POWER_OP < MINUSASSIGN_OP).
    Conflict between rule 63 and token MULTASSIGN_OP resolved as shift (POWER_OP < MULTASSIGN_OP).
    Conflict between rule 63 and token DIVASSIGN_OP resolved as shift (POWER_OP < DIVASSIGN_OP).
    Conflict between rule 63 and token MODASSIGN_OP resolved as shift (POWER_OP < MODASSIGN_OP).
    Conflict between rule 63 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < POWER_OP).
    Conflict between rule 63 and token '*' resolved as shift (POWER_OP < '*').
    Conflict between rule 63 and token '/' resolved as shift (POWER_OP < '/').
    Conflict between rule 63 and token '%' resolved as shift (POWER_OP < '%').
    Conflict between rule 63 and token '+' resolved as shift (POWER_OP < '+').
    Conflict between rule 63 and token '-' resolved as shift (POWER_OP < '-').
    Conflict between rule 63 and token KEYWORD_AND resolved as shift (POWER_OP < KEYWORD_AND).
    Conflict between rule 63 and token KEYWORD_OR resolved as shift (POWER_OP < KEYWORD_OR).


State 88

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   70     | expr EQUAL_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token POWER_OP resolved as reduce (POWER_OP < EQUAL_OP).
    Conflict between rule 70 and token EQUAL_OP resolved as reduce (%left EQUAL_OP).
    Conflict between rule 70 and token NOTEQUAL_OP resolved as shift (EQUAL_OP < NOTEQUAL_OP).
    Conflict between rule 70 and token LESSTHAN_OP resolved as shift (EQUAL_OP < LESSTHAN_OP).
    Conflict between rule 70 and token LESSTHANEQUAL_OP resolved as shift (EQUAL_OP < LESSTHANEQUAL_OP).
    Conflict between rule 70 and token GREATERTHAN_OP resolved as shift (EQUAL_OP < GREATERTHAN_OP).
    Conflict between rule 70 and token GREATERTHANEQUAL_OP resolved as shift (EQUAL_OP < GREATERTHANEQUAL_OP).
    Conflict between rule 70 and token PLUSASSIGN_OP resolved as shift (EQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 70 and token MINUSASSIGN_OP resolved as shift (EQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 70 and token MULTASSIGN_OP resolved as shift (EQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 70 and token DIVASSIGN_OP resolved as shift (EQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 70 and token MODASSIGN_OP resolved as shift (EQUAL_OP < MODASSIGN_OP).
    Conflict between rule 70 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < EQUAL_OP).
    Conflict between rule 70 and token '*' resolved as reduce ('*' < EQUAL_OP).
    Conflict between rule 70 and token '/' resolved as reduce ('/' < EQUAL_OP).
    Conflict between rule 70 and token '%' resolved as reduce ('%' < EQUAL_OP).
    Conflict between rule 70 and token '+' resolved as reduce ('+' < EQUAL_OP).
    Conflict between rule 70 and token '-' resolved as reduce ('-' < EQUAL_OP).
    Conflict between rule 70 and token KEYWORD_AND resolved as shift (EQUAL_OP < KEYWORD_AND).
    Conflict between rule 70 and token KEYWORD_OR resolved as shift (EQUAL_OP < KEYWORD_OR).


State 89

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   71     | expr NOTEQUAL_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    PLUSASSIGN_OP   shift, and go to state 60
    MINUSASSIGN_OP  shift, and go to state 61
    MULTASSIGN_OP   shift, and go to state 62
    DIVASSIGN_OP    shift, and go to state 63
    MODASSIGN_OP    shift, and go to state 64
    KEYWORD_AND     shift, and go to state 71
    KEYWORD_OR      shift, and go to state 72

    $default  reduce using rule 71 (expr)

    Conflict between rule 71 and token POWER_OP resolved as reduce (POWER_OP < NOTEQUAL_OP).
    Conflict between rule 71 and token EQUAL_OP resolved as reduce (EQUAL_OP < NOTEQUAL_OP).
    Conflict between rule 71 and token NOTEQUAL_OP resolved as reduce (%left NOTEQUAL_OP).
    Conflict between rule 71 and token LESSTHAN_OP resolved as reduce (%left LESSTHAN_OP).
    Conflict between rule 71 and token LESSTHANEQUAL_OP resolved as reduce (%left LESSTHANEQUAL_OP).
    Conflict between rule 71 and token GREATERTHAN_OP resolved as reduce (%left GREATERTHAN_OP).
    Conflict between rule 71 and token GREATERTHANEQUAL_OP resolved as reduce (%left GREATERTHANEQUAL_OP).
    Conflict between rule 71 and token PLUSASSIGN_OP resolved as shift (NOTEQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 71 and token MINUSASSIGN_OP resolved as shift (NOTEQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 71 and token MULTASSIGN_OP resolved as shift (NOTEQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 71 and token DIVASSIGN_OP resolved as shift (NOTEQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 71 and token MODASSIGN_OP resolved as shift (NOTEQUAL_OP < MODASSIGN_OP).
    Conflict between rule 71 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < NOTEQUAL_OP).
    Conflict between rule 71 and token '*' resolved as reduce ('*' < NOTEQUAL_OP).
    Conflict between rule 71 and token '/' resolved as reduce ('/' < NOTEQUAL_OP).
    Conflict between rule 71 and token '%' resolved as reduce ('%' < NOTEQUAL_OP).
    Conflict between rule 71 and token '+' resolved as reduce ('+' < NOTEQUAL_OP).
    Conflict between rule 71 and token '-' resolved as reduce ('-' < NOTEQUAL_OP).
    Conflict between rule 71 and token KEYWORD_AND resolved as shift (NOTEQUAL_OP < KEYWORD_AND).
    Conflict between rule 71 and token KEYWORD_OR resolved as shift (NOTEQUAL_OP < KEYWORD_OR).


State 90

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   72     | expr LESSTHAN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    PLUSASSIGN_OP   shift, and go to state 60
    MINUSASSIGN_OP  shift, and go to state 61
    MULTASSIGN_OP   shift, and go to state 62
    DIVASSIGN_OP    shift, and go to state 63
    MODASSIGN_OP    shift, and go to state 64
    KEYWORD_AND     shift, and go to state 71
    KEYWORD_OR      shift, and go to state 72

    $default  reduce using rule 72 (expr)

    Conflict between rule 72 and token POWER_OP resolved as reduce (POWER_OP < LESSTHAN_OP).
    Conflict between rule 72 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESSTHAN_OP).
    Conflict between rule 72 and token NOTEQUAL_OP resolved as reduce (%left NOTEQUAL_OP).
    Conflict between rule 72 and token LESSTHAN_OP resolved as reduce (%left LESSTHAN_OP).
    Conflict between rule 72 and token LESSTHANEQUAL_OP resolved as reduce (%left LESSTHANEQUAL_OP).
    Conflict between rule 72 and token GREATERTHAN_OP resolved as reduce (%left GREATERTHAN_OP).
    Conflict between rule 72 and token GREATERTHANEQUAL_OP resolved as reduce (%left GREATERTHANEQUAL_OP).
    Conflict between rule 72 and token PLUSASSIGN_OP resolved as shift (LESSTHAN_OP < PLUSASSIGN_OP).
    Conflict between rule 72 and token MINUSASSIGN_OP resolved as shift (LESSTHAN_OP < MINUSASSIGN_OP).
    Conflict between rule 72 and token MULTASSIGN_OP resolved as shift (LESSTHAN_OP < MULTASSIGN_OP).
    Conflict between rule 72 and token DIVASSIGN_OP resolved as shift (LESSTHAN_OP < DIVASSIGN_OP).
    Conflict between rule 72 and token MODASSIGN_OP resolved as shift (LESSTHAN_OP < MODASSIGN_OP).
    Conflict between rule 72 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < LESSTHAN_OP).
    Conflict between rule 72 and token '*' resolved as reduce ('*' < LESSTHAN_OP).
    Conflict between rule 72 and token '/' resolved as reduce ('/' < LESSTHAN_OP).
    Conflict between rule 72 and token '%' resolved as reduce ('%' < LESSTHAN_OP).
    Conflict between rule 72 and token '+' resolved as reduce ('+' < LESSTHAN_OP).
    Conflict between rule 72 and token '-' resolved as reduce ('-' < LESSTHAN_OP).
    Conflict between rule 72 and token KEYWORD_AND resolved as shift (LESSTHAN_OP < KEYWORD_AND).
    Conflict between rule 72 and token KEYWORD_OR resolved as shift (LESSTHAN_OP < KEYWORD_OR).


State 91

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   74     | expr LESSTHANEQUAL_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    PLUSASSIGN_OP   shift, and go to state 60
    MINUSASSIGN_OP  shift, and go to state 61
    MULTASSIGN_OP   shift, and go to state 62
    DIVASSIGN_OP    shift, and go to state 63
    MODASSIGN_OP    shift, and go to state 64
    KEYWORD_AND     shift, and go to state 71
    KEYWORD_OR      shift, and go to state 72

    $default  reduce using rule 74 (expr)

    Conflict between rule 74 and token POWER_OP resolved as reduce (POWER_OP < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token EQUAL_OP resolved as reduce (EQUAL_OP < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token NOTEQUAL_OP resolved as reduce (%left NOTEQUAL_OP).
    Conflict between rule 74 and token LESSTHAN_OP resolved as reduce (%left LESSTHAN_OP).
    Conflict between rule 74 and token LESSTHANEQUAL_OP resolved as reduce (%left LESSTHANEQUAL_OP).
    Conflict between rule 74 and token GREATERTHAN_OP resolved as reduce (%left GREATERTHAN_OP).
    Conflict between rule 74 and token GREATERTHANEQUAL_OP resolved as reduce (%left GREATERTHANEQUAL_OP).
    Conflict between rule 74 and token PLUSASSIGN_OP resolved as shift (LESSTHANEQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 74 and token MINUSASSIGN_OP resolved as shift (LESSTHANEQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 74 and token MULTASSIGN_OP resolved as shift (LESSTHANEQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 74 and token DIVASSIGN_OP resolved as shift (LESSTHANEQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 74 and token MODASSIGN_OP resolved as shift (LESSTHANEQUAL_OP < MODASSIGN_OP).
    Conflict between rule 74 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token '*' resolved as reduce ('*' < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token '/' resolved as reduce ('/' < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token '%' resolved as reduce ('%' < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token '+' resolved as reduce ('+' < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token '-' resolved as reduce ('-' < LESSTHANEQUAL_OP).
    Conflict between rule 74 and token KEYWORD_AND resolved as shift (LESSTHANEQUAL_OP < KEYWORD_AND).
    Conflict between rule 74 and token KEYWORD_OR resolved as shift (LESSTHANEQUAL_OP < KEYWORD_OR).


State 92

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   73     | expr GREATERTHAN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    PLUSASSIGN_OP   shift, and go to state 60
    MINUSASSIGN_OP  shift, and go to state 61
    MULTASSIGN_OP   shift, and go to state 62
    DIVASSIGN_OP    shift, and go to state 63
    MODASSIGN_OP    shift, and go to state 64
    KEYWORD_AND     shift, and go to state 71
    KEYWORD_OR      shift, and go to state 72

    $default  reduce using rule 73 (expr)

    Conflict between rule 73 and token POWER_OP resolved as reduce (POWER_OP < GREATERTHAN_OP).
    Conflict between rule 73 and token EQUAL_OP resolved as reduce (EQUAL_OP < GREATERTHAN_OP).
    Conflict between rule 73 and token NOTEQUAL_OP resolved as reduce (%left NOTEQUAL_OP).
    Conflict between rule 73 and token LESSTHAN_OP resolved as reduce (%left LESSTHAN_OP).
    Conflict between rule 73 and token LESSTHANEQUAL_OP resolved as reduce (%left LESSTHANEQUAL_OP).
    Conflict between rule 73 and token GREATERTHAN_OP resolved as reduce (%left GREATERTHAN_OP).
    Conflict between rule 73 and token GREATERTHANEQUAL_OP resolved as reduce (%left GREATERTHANEQUAL_OP).
    Conflict between rule 73 and token PLUSASSIGN_OP resolved as shift (GREATERTHAN_OP < PLUSASSIGN_OP).
    Conflict between rule 73 and token MINUSASSIGN_OP resolved as shift (GREATERTHAN_OP < MINUSASSIGN_OP).
    Conflict between rule 73 and token MULTASSIGN_OP resolved as shift (GREATERTHAN_OP < MULTASSIGN_OP).
    Conflict between rule 73 and token DIVASSIGN_OP resolved as shift (GREATERTHAN_OP < DIVASSIGN_OP).
    Conflict between rule 73 and token MODASSIGN_OP resolved as shift (GREATERTHAN_OP < MODASSIGN_OP).
    Conflict between rule 73 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < GREATERTHAN_OP).
    Conflict between rule 73 and token '*' resolved as reduce ('*' < GREATERTHAN_OP).
    Conflict between rule 73 and token '/' resolved as reduce ('/' < GREATERTHAN_OP).
    Conflict between rule 73 and token '%' resolved as reduce ('%' < GREATERTHAN_OP).
    Conflict between rule 73 and token '+' resolved as reduce ('+' < GREATERTHAN_OP).
    Conflict between rule 73 and token '-' resolved as reduce ('-' < GREATERTHAN_OP).
    Conflict between rule 73 and token KEYWORD_AND resolved as shift (GREATERTHAN_OP < KEYWORD_AND).
    Conflict between rule 73 and token KEYWORD_OR resolved as shift (GREATERTHAN_OP < KEYWORD_OR).


State 93

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   75     | expr GREATERTHANEQUAL_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    PLUSASSIGN_OP   shift, and go to state 60
    MINUSASSIGN_OP  shift, and go to state 61
    MULTASSIGN_OP   shift, and go to state 62
    DIVASSIGN_OP    shift, and go to state 63
    MODASSIGN_OP    shift, and go to state 64
    KEYWORD_AND     shift, and go to state 71
    KEYWORD_OR      shift, and go to state 72

    $default  reduce using rule 75 (expr)

    Conflict between rule 75 and token POWER_OP resolved as reduce (POWER_OP < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token EQUAL_OP resolved as reduce (EQUAL_OP < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token NOTEQUAL_OP resolved as reduce (%left NOTEQUAL_OP).
    Conflict between rule 75 and token LESSTHAN_OP resolved as reduce (%left LESSTHAN_OP).
    Conflict between rule 75 and token LESSTHANEQUAL_OP resolved as reduce (%left LESSTHANEQUAL_OP).
    Conflict between rule 75 and token GREATERTHAN_OP resolved as reduce (%left GREATERTHAN_OP).
    Conflict between rule 75 and token GREATERTHANEQUAL_OP resolved as reduce (%left GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token PLUSASSIGN_OP resolved as shift (GREATERTHANEQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 75 and token MINUSASSIGN_OP resolved as shift (GREATERTHANEQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 75 and token MULTASSIGN_OP resolved as shift (GREATERTHANEQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 75 and token DIVASSIGN_OP resolved as shift (GREATERTHANEQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 75 and token MODASSIGN_OP resolved as shift (GREATERTHANEQUAL_OP < MODASSIGN_OP).
    Conflict between rule 75 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token '*' resolved as reduce ('*' < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token '/' resolved as reduce ('/' < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token '%' resolved as reduce ('%' < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token '+' resolved as reduce ('+' < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token '-' resolved as reduce ('-' < GREATERTHANEQUAL_OP).
    Conflict between rule 75 and token KEYWORD_AND resolved as shift (GREATERTHANEQUAL_OP < KEYWORD_AND).
    Conflict between rule 75 and token KEYWORD_OR resolved as shift (GREATERTHANEQUAL_OP < KEYWORD_OR).


State 94

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   79     | expr PLUSASSIGN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    KEYWORD_AND  shift, and go to state 71
    KEYWORD_OR   shift, and go to state 72

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token POWER_OP resolved as reduce (POWER_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token EQUAL_OP resolved as reduce (EQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < PLUSASSIGN_OP).
    Conflict between rule 79 and token PLUSASSIGN_OP resolved as reduce (%left PLUSASSIGN_OP).
    Conflict between rule 79 and token MINUSASSIGN_OP resolved as reduce (%left MINUSASSIGN_OP).
    Conflict between rule 79 and token MULTASSIGN_OP resolved as reduce (%left MULTASSIGN_OP).
    Conflict between rule 79 and token DIVASSIGN_OP resolved as reduce (%left DIVASSIGN_OP).
    Conflict between rule 79 and token MODASSIGN_OP resolved as reduce (%left MODASSIGN_OP).
    Conflict between rule 79 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < PLUSASSIGN_OP).
    Conflict between rule 79 and token '*' resolved as reduce ('*' < PLUSASSIGN_OP).
    Conflict between rule 79 and token '/' resolved as reduce ('/' < PLUSASSIGN_OP).
    Conflict between rule 79 and token '%' resolved as reduce ('%' < PLUSASSIGN_OP).
    Conflict between rule 79 and token '+' resolved as reduce ('+' < PLUSASSIGN_OP).
    Conflict between rule 79 and token '-' resolved as reduce ('-' < PLUSASSIGN_OP).
    Conflict between rule 79 and token KEYWORD_AND resolved as shift (PLUSASSIGN_OP < KEYWORD_AND).
    Conflict between rule 79 and token KEYWORD_OR resolved as shift (PLUSASSIGN_OP < KEYWORD_OR).


State 95

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   80     | expr MINUSASSIGN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    KEYWORD_AND  shift, and go to state 71
    KEYWORD_OR   shift, and go to state 72

    $default  reduce using rule 80 (expr)

    Conflict between rule 80 and token POWER_OP resolved as reduce (POWER_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token EQUAL_OP resolved as reduce (EQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < MINUSASSIGN_OP).
    Conflict between rule 80 and token PLUSASSIGN_OP resolved as reduce (%left PLUSASSIGN_OP).
    Conflict between rule 80 and token MINUSASSIGN_OP resolved as reduce (%left MINUSASSIGN_OP).
    Conflict between rule 80 and token MULTASSIGN_OP resolved as reduce (%left MULTASSIGN_OP).
    Conflict between rule 80 and token DIVASSIGN_OP resolved as reduce (%left DIVASSIGN_OP).
    Conflict between rule 80 and token MODASSIGN_OP resolved as reduce (%left MODASSIGN_OP).
    Conflict between rule 80 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < MINUSASSIGN_OP).
    Conflict between rule 80 and token '*' resolved as reduce ('*' < MINUSASSIGN_OP).
    Conflict between rule 80 and token '/' resolved as reduce ('/' < MINUSASSIGN_OP).
    Conflict between rule 80 and token '%' resolved as reduce ('%' < MINUSASSIGN_OP).
    Conflict between rule 80 and token '+' resolved as reduce ('+' < MINUSASSIGN_OP).
    Conflict between rule 80 and token '-' resolved as reduce ('-' < MINUSASSIGN_OP).
    Conflict between rule 80 and token KEYWORD_AND resolved as shift (MINUSASSIGN_OP < KEYWORD_AND).
    Conflict between rule 80 and token KEYWORD_OR resolved as shift (MINUSASSIGN_OP < KEYWORD_OR).


State 96

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   81     | expr MULTASSIGN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    KEYWORD_AND  shift, and go to state 71
    KEYWORD_OR   shift, and go to state 72

    $default  reduce using rule 81 (expr)

    Conflict between rule 81 and token POWER_OP resolved as reduce (POWER_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token EQUAL_OP resolved as reduce (EQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < MULTASSIGN_OP).
    Conflict between rule 81 and token PLUSASSIGN_OP resolved as reduce (%left PLUSASSIGN_OP).
    Conflict between rule 81 and token MINUSASSIGN_OP resolved as reduce (%left MINUSASSIGN_OP).
    Conflict between rule 81 and token MULTASSIGN_OP resolved as reduce (%left MULTASSIGN_OP).
    Conflict between rule 81 and token DIVASSIGN_OP resolved as reduce (%left DIVASSIGN_OP).
    Conflict between rule 81 and token MODASSIGN_OP resolved as reduce (%left MODASSIGN_OP).
    Conflict between rule 81 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < MULTASSIGN_OP).
    Conflict between rule 81 and token '*' resolved as reduce ('*' < MULTASSIGN_OP).
    Conflict between rule 81 and token '/' resolved as reduce ('/' < MULTASSIGN_OP).
    Conflict between rule 81 and token '%' resolved as reduce ('%' < MULTASSIGN_OP).
    Conflict between rule 81 and token '+' resolved as reduce ('+' < MULTASSIGN_OP).
    Conflict between rule 81 and token '-' resolved as reduce ('-' < MULTASSIGN_OP).
    Conflict between rule 81 and token KEYWORD_AND resolved as shift (MULTASSIGN_OP < KEYWORD_AND).
    Conflict between rule 81 and token KEYWORD_OR resolved as shift (MULTASSIGN_OP < KEYWORD_OR).


State 97

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   82     | expr DIVASSIGN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   83     | expr • MODASSIGN_OP expr

    KEYWORD_AND  shift, and go to state 71
    KEYWORD_OR   shift, and go to state 72

    $default  reduce using rule 82 (expr)

    Conflict between rule 82 and token POWER_OP resolved as reduce (POWER_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token EQUAL_OP resolved as reduce (EQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < DIVASSIGN_OP).
    Conflict between rule 82 and token PLUSASSIGN_OP resolved as reduce (%left PLUSASSIGN_OP).
    Conflict between rule 82 and token MINUSASSIGN_OP resolved as reduce (%left MINUSASSIGN_OP).
    Conflict between rule 82 and token MULTASSIGN_OP resolved as reduce (%left MULTASSIGN_OP).
    Conflict between rule 82 and token DIVASSIGN_OP resolved as reduce (%left DIVASSIGN_OP).
    Conflict between rule 82 and token MODASSIGN_OP resolved as reduce (%left MODASSIGN_OP).
    Conflict between rule 82 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < DIVASSIGN_OP).
    Conflict between rule 82 and token '*' resolved as reduce ('*' < DIVASSIGN_OP).
    Conflict between rule 82 and token '/' resolved as reduce ('/' < DIVASSIGN_OP).
    Conflict between rule 82 and token '%' resolved as reduce ('%' < DIVASSIGN_OP).
    Conflict between rule 82 and token '+' resolved as reduce ('+' < DIVASSIGN_OP).
    Conflict between rule 82 and token '-' resolved as reduce ('-' < DIVASSIGN_OP).
    Conflict between rule 82 and token KEYWORD_AND resolved as shift (DIVASSIGN_OP < KEYWORD_AND).
    Conflict between rule 82 and token KEYWORD_OR resolved as shift (DIVASSIGN_OP < KEYWORD_OR).


State 98

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr
   83     | expr MODASSIGN_OP expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']

    KEYWORD_AND  shift, and go to state 71
    KEYWORD_OR   shift, and go to state 72

    $default  reduce using rule 83 (expr)

    Conflict between rule 83 and token POWER_OP resolved as reduce (POWER_OP < MODASSIGN_OP).
    Conflict between rule 83 and token EQUAL_OP resolved as reduce (EQUAL_OP < MODASSIGN_OP).
    Conflict between rule 83 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < MODASSIGN_OP).
    Conflict between rule 83 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < MODASSIGN_OP).
    Conflict between rule 83 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < MODASSIGN_OP).
    Conflict between rule 83 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < MODASSIGN_OP).
    Conflict between rule 83 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < MODASSIGN_OP).
    Conflict between rule 83 and token PLUSASSIGN_OP resolved as reduce (%left PLUSASSIGN_OP).
    Conflict between rule 83 and token MINUSASSIGN_OP resolved as reduce (%left MINUSASSIGN_OP).
    Conflict between rule 83 and token MULTASSIGN_OP resolved as reduce (%left MULTASSIGN_OP).
    Conflict between rule 83 and token DIVASSIGN_OP resolved as reduce (%left DIVASSIGN_OP).
    Conflict between rule 83 and token MODASSIGN_OP resolved as reduce (%left MODASSIGN_OP).
    Conflict between rule 83 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < MODASSIGN_OP).
    Conflict between rule 83 and token '*' resolved as reduce ('*' < MODASSIGN_OP).
    Conflict between rule 83 and token '/' resolved as reduce ('/' < MODASSIGN_OP).
    Conflict between rule 83 and token '%' resolved as reduce ('%' < MODASSIGN_OP).
    Conflict between rule 83 and token '+' resolved as reduce ('+' < MODASSIGN_OP).
    Conflict between rule 83 and token '-' resolved as reduce ('-' < MODASSIGN_OP).
    Conflict between rule 83 and token KEYWORD_AND resolved as shift (MODASSIGN_OP < KEYWORD_AND).
    Conflict between rule 83 and token KEYWORD_OR resolved as shift (MODASSIGN_OP < KEYWORD_OR).


State 99

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   78     | expr KEYWORD_NOT expr •  [KEYWORD_FOR, KEYWORD_OF, ')', ':', ';', ']', ',']
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 78 (expr)

    Conflict between rule 78 and token POWER_OP resolved as shift (KEYWORD_NOT < POWER_OP).
    Conflict between rule 78 and token EQUAL_OP resolved as shift (KEYWORD_NOT < EQUAL_OP).
    Conflict between rule 78 and token NOTEQUAL_OP resolved as shift (KEYWORD_NOT < NOTEQUAL_OP).
    Conflict between rule 78 and token LESSTHAN_OP resolved as shift (KEYWORD_NOT < LESSTHAN_OP).
    Conflict between rule 78 and token LESSTHANEQUAL_OP resolved as shift (KEYWORD_NOT < LESSTHANEQUAL_OP).
    Conflict between rule 78 and token GREATERTHAN_OP resolved as shift (KEYWORD_NOT < GREATERTHAN_OP).
    Conflict between rule 78 and token GREATERTHANEQUAL_OP resolved as shift (KEYWORD_NOT < GREATERTHANEQUAL_OP).
    Conflict between rule 78 and token PLUSASSIGN_OP resolved as shift (KEYWORD_NOT < PLUSASSIGN_OP).
    Conflict between rule 78 and token MINUSASSIGN_OP resolved as shift (KEYWORD_NOT < MINUSASSIGN_OP).
    Conflict between rule 78 and token MULTASSIGN_OP resolved as shift (KEYWORD_NOT < MULTASSIGN_OP).
    Conflict between rule 78 and token DIVASSIGN_OP resolved as shift (KEYWORD_NOT < DIVASSIGN_OP).
    Conflict between rule 78 and token MODASSIGN_OP resolved as shift (KEYWORD_NOT < MODASSIGN_OP).
    Conflict between rule 78 and token KEYWORD_NOT resolved as shift (%right KEYWORD_NOT).
    Conflict between rule 78 and token '*' resolved as shift (KEYWORD_NOT < '*').
    Conflict between rule 78 and token '/' resolved as shift (KEYWORD_NOT < '/').
    Conflict between rule 78 and token '%' resolved as shift (KEYWORD_NOT < '%').
    Conflict between rule 78 and token '+' resolved as shift (KEYWORD_NOT < '+').
    Conflict between rule 78 and token '-' resolved as shift (KEYWORD_NOT < '-').
    Conflict between rule 78 and token KEYWORD_AND resolved as shift (KEYWORD_NOT < KEYWORD_AND).
    Conflict between rule 78 and token KEYWORD_OR resolved as shift (KEYWORD_NOT < KEYWORD_OR).


State 100

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   64     | expr '*' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', ')', ':', ';', ']', ',']
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 64 (expr)

    Conflict between rule 64 and token POWER_OP resolved as reduce (POWER_OP < '*').
    Conflict between rule 64 and token EQUAL_OP resolved as shift ('*' < EQUAL_OP).
    Conflict between rule 64 and token NOTEQUAL_OP resolved as shift ('*' < NOTEQUAL_OP).
    Conflict between rule 64 and token LESSTHAN_OP resolved as shift ('*' < LESSTHAN_OP).
    Conflict between rule 64 and token LESSTHANEQUAL_OP resolved as shift ('*' < LESSTHANEQUAL_OP).
    Conflict between rule 64 and token GREATERTHAN_OP resolved as shift ('*' < GREATERTHAN_OP).
    Conflict between rule 64 and token GREATERTHANEQUAL_OP resolved as shift ('*' < GREATERTHANEQUAL_OP).
    Conflict between rule 64 and token PLUSASSIGN_OP resolved as shift ('*' < PLUSASSIGN_OP).
    Conflict between rule 64 and token MINUSASSIGN_OP resolved as shift ('*' < MINUSASSIGN_OP).
    Conflict between rule 64 and token MULTASSIGN_OP resolved as shift ('*' < MULTASSIGN_OP).
    Conflict between rule 64 and token DIVASSIGN_OP resolved as shift ('*' < DIVASSIGN_OP).
    Conflict between rule 64 and token MODASSIGN_OP resolved as shift ('*' < MODASSIGN_OP).
    Conflict between rule 64 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '*').
    Conflict between rule 64 and token '*' resolved as reduce (%left '*').
    Conflict between rule 64 and token '/' resolved as reduce (%left '/').
    Conflict between rule 64 and token '%' resolved as reduce (%left '%').
    Conflict between rule 64 and token '+' resolved as shift ('*' < '+').
    Conflict between rule 64 and token '-' resolved as shift ('*' < '-').
    Conflict between rule 64 and token KEYWORD_AND resolved as shift ('*' < KEYWORD_AND).
    Conflict between rule 64 and token KEYWORD_OR resolved as shift ('*' < KEYWORD_OR).


State 101

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   65     | expr '/' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', ')', ':', ';', ']', ',']
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 65 (expr)

    Conflict between rule 65 and token POWER_OP resolved as reduce (POWER_OP < '/').
    Conflict between rule 65 and token EQUAL_OP resolved as shift ('/' < EQUAL_OP).
    Conflict between rule 65 and token NOTEQUAL_OP resolved as shift ('/' < NOTEQUAL_OP).
    Conflict between rule 65 and token LESSTHAN_OP resolved as shift ('/' < LESSTHAN_OP).
    Conflict between rule 65 and token LESSTHANEQUAL_OP resolved as shift ('/' < LESSTHANEQUAL_OP).
    Conflict between rule 65 and token GREATERTHAN_OP resolved as shift ('/' < GREATERTHAN_OP).
    Conflict between rule 65 and token GREATERTHANEQUAL_OP resolved as shift ('/' < GREATERTHANEQUAL_OP).
    Conflict between rule 65 and token PLUSASSIGN_OP resolved as shift ('/' < PLUSASSIGN_OP).
    Conflict between rule 65 and token MINUSASSIGN_OP resolved as shift ('/' < MINUSASSIGN_OP).
    Conflict between rule 65 and token MULTASSIGN_OP resolved as shift ('/' < MULTASSIGN_OP).
    Conflict between rule 65 and token DIVASSIGN_OP resolved as shift ('/' < DIVASSIGN_OP).
    Conflict between rule 65 and token MODASSIGN_OP resolved as shift ('/' < MODASSIGN_OP).
    Conflict between rule 65 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '/').
    Conflict between rule 65 and token '*' resolved as reduce (%left '*').
    Conflict between rule 65 and token '/' resolved as reduce (%left '/').
    Conflict between rule 65 and token '%' resolved as reduce (%left '%').
    Conflict between rule 65 and token '+' resolved as shift ('/' < '+').
    Conflict between rule 65 and token '-' resolved as shift ('/' < '-').
    Conflict between rule 65 and token KEYWORD_AND resolved as shift ('/' < KEYWORD_AND).
    Conflict between rule 65 and token KEYWORD_OR resolved as shift ('/' < KEYWORD_OR).


State 102

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   66     | expr '%' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', ')', ':', ';', ']', ',']
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 66 (expr)

    Conflict between rule 66 and token POWER_OP resolved as reduce (POWER_OP < '%').
    Conflict between rule 66 and token EQUAL_OP resolved as shift ('%' < EQUAL_OP).
    Conflict between rule 66 and token NOTEQUAL_OP resolved as shift ('%' < NOTEQUAL_OP).
    Conflict between rule 66 and token LESSTHAN_OP resolved as shift ('%' < LESSTHAN_OP).
    Conflict between rule 66 and token LESSTHANEQUAL_OP resolved as shift ('%' < LESSTHANEQUAL_OP).
    Conflict between rule 66 and token GREATERTHAN_OP resolved as shift ('%' < GREATERTHAN_OP).
    Conflict between rule 66 and token GREATERTHANEQUAL_OP resolved as shift ('%' < GREATERTHANEQUAL_OP).
    Conflict between rule 66 and token PLUSASSIGN_OP resolved as shift ('%' < PLUSASSIGN_OP).
    Conflict between rule 66 and token MINUSASSIGN_OP resolved as shift ('%' < MINUSASSIGN_OP).
    Conflict between rule 66 and token MULTASSIGN_OP resolved as shift ('%' < MULTASSIGN_OP).
    Conflict between rule 66 and token DIVASSIGN_OP resolved as shift ('%' < DIVASSIGN_OP).
    Conflict between rule 66 and token MODASSIGN_OP resolved as shift ('%' < MODASSIGN_OP).
    Conflict between rule 66 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '%').
    Conflict between rule 66 and token '*' resolved as reduce (%left '*').
    Conflict between rule 66 and token '/' resolved as reduce (%left '/').
    Conflict between rule 66 and token '%' resolved as reduce (%left '%').
    Conflict between rule 66 and token '+' resolved as shift ('%' < '+').
    Conflict between rule 66 and token '-' resolved as shift ('%' < '-').
    Conflict between rule 66 and token KEYWORD_AND resolved as shift ('%' < KEYWORD_AND).
    Conflict between rule 66 and token KEYWORD_OR resolved as shift ('%' < KEYWORD_OR).


State 103

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   67     | expr '+' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 67 (expr)

    Conflict between rule 67 and token POWER_OP resolved as reduce (POWER_OP < '+').
    Conflict between rule 67 and token EQUAL_OP resolved as shift ('+' < EQUAL_OP).
    Conflict between rule 67 and token NOTEQUAL_OP resolved as shift ('+' < NOTEQUAL_OP).
    Conflict between rule 67 and token LESSTHAN_OP resolved as shift ('+' < LESSTHAN_OP).
    Conflict between rule 67 and token LESSTHANEQUAL_OP resolved as shift ('+' < LESSTHANEQUAL_OP).
    Conflict between rule 67 and token GREATERTHAN_OP resolved as shift ('+' < GREATERTHAN_OP).
    Conflict between rule 67 and token GREATERTHANEQUAL_OP resolved as shift ('+' < GREATERTHANEQUAL_OP).
    Conflict between rule 67 and token PLUSASSIGN_OP resolved as shift ('+' < PLUSASSIGN_OP).
    Conflict between rule 67 and token MINUSASSIGN_OP resolved as shift ('+' < MINUSASSIGN_OP).
    Conflict between rule 67 and token MULTASSIGN_OP resolved as shift ('+' < MULTASSIGN_OP).
    Conflict between rule 67 and token DIVASSIGN_OP resolved as shift ('+' < DIVASSIGN_OP).
    Conflict between rule 67 and token MODASSIGN_OP resolved as shift ('+' < MODASSIGN_OP).
    Conflict between rule 67 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '+').
    Conflict between rule 67 and token '*' resolved as reduce ('*' < '+').
    Conflict between rule 67 and token '/' resolved as reduce ('/' < '+').
    Conflict between rule 67 and token '%' resolved as reduce ('%' < '+').
    Conflict between rule 67 and token '+' resolved as reduce (%left '+').
    Conflict between rule 67 and token '-' resolved as reduce (%left '-').
    Conflict between rule 67 and token KEYWORD_AND resolved as shift ('+' < KEYWORD_AND).
    Conflict between rule 67 and token KEYWORD_OR resolved as shift ('+' < KEYWORD_OR).


State 104

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   68     | expr '-' expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', ')', ':', ';', ']', ',']
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72

    $default  reduce using rule 68 (expr)

    Conflict between rule 68 and token POWER_OP resolved as reduce (POWER_OP < '-').
    Conflict between rule 68 and token EQUAL_OP resolved as shift ('-' < EQUAL_OP).
    Conflict between rule 68 and token NOTEQUAL_OP resolved as shift ('-' < NOTEQUAL_OP).
    Conflict between rule 68 and token LESSTHAN_OP resolved as shift ('-' < LESSTHAN_OP).
    Conflict between rule 68 and token LESSTHANEQUAL_OP resolved as shift ('-' < LESSTHANEQUAL_OP).
    Conflict between rule 68 and token GREATERTHAN_OP resolved as shift ('-' < GREATERTHAN_OP).
    Conflict between rule 68 and token GREATERTHANEQUAL_OP resolved as shift ('-' < GREATERTHANEQUAL_OP).
    Conflict between rule 68 and token PLUSASSIGN_OP resolved as shift ('-' < PLUSASSIGN_OP).
    Conflict between rule 68 and token MINUSASSIGN_OP resolved as shift ('-' < MINUSASSIGN_OP).
    Conflict between rule 68 and token MULTASSIGN_OP resolved as shift ('-' < MULTASSIGN_OP).
    Conflict between rule 68 and token DIVASSIGN_OP resolved as shift ('-' < DIVASSIGN_OP).
    Conflict between rule 68 and token MODASSIGN_OP resolved as shift ('-' < MODASSIGN_OP).
    Conflict between rule 68 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '-').
    Conflict between rule 68 and token '*' resolved as reduce ('*' < '-').
    Conflict between rule 68 and token '/' resolved as reduce ('/' < '-').
    Conflict between rule 68 and token '%' resolved as reduce ('%' < '-').
    Conflict between rule 68 and token '+' resolved as reduce (%left '+').
    Conflict between rule 68 and token '-' resolved as reduce (%left '-').
    Conflict between rule 68 and token KEYWORD_AND resolved as shift ('-' < KEYWORD_AND).
    Conflict between rule 68 and token KEYWORD_OR resolved as shift ('-' < KEYWORD_OR).


State 105

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   76     | expr KEYWORD_AND expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', KEYWORD_AND, KEYWORD_OR, ')', ':', ';', ']', ',']
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    $default  reduce using rule 76 (expr)

    Conflict between rule 76 and token POWER_OP resolved as reduce (POWER_OP < KEYWORD_AND).
    Conflict between rule 76 and token EQUAL_OP resolved as reduce (EQUAL_OP < KEYWORD_AND).
    Conflict between rule 76 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < KEYWORD_AND).
    Conflict between rule 76 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < KEYWORD_AND).
    Conflict between rule 76 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < KEYWORD_AND).
    Conflict between rule 76 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < KEYWORD_AND).
    Conflict between rule 76 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < KEYWORD_AND).
    Conflict between rule 76 and token PLUSASSIGN_OP resolved as reduce (PLUSASSIGN_OP < KEYWORD_AND).
    Conflict between rule 76 and token MINUSASSIGN_OP resolved as reduce (MINUSASSIGN_OP < KEYWORD_AND).
    Conflict between rule 76 and token MULTASSIGN_OP resolved as reduce (MULTASSIGN_OP < KEYWORD_AND).
    Conflict between rule 76 and token DIVASSIGN_OP resolved as reduce (DIVASSIGN_OP < KEYWORD_AND).
    Conflict between rule 76 and token MODASSIGN_OP resolved as reduce (MODASSIGN_OP < KEYWORD_AND).
    Conflict between rule 76 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < KEYWORD_AND).
    Conflict between rule 76 and token '*' resolved as reduce ('*' < KEYWORD_AND).
    Conflict between rule 76 and token '/' resolved as reduce ('/' < KEYWORD_AND).
    Conflict between rule 76 and token '%' resolved as reduce ('%' < KEYWORD_AND).
    Conflict between rule 76 and token '+' resolved as reduce ('+' < KEYWORD_AND).
    Conflict between rule 76 and token '-' resolved as reduce ('-' < KEYWORD_AND).
    Conflict between rule 76 and token KEYWORD_AND resolved as reduce (%left KEYWORD_AND).
    Conflict between rule 76 and token KEYWORD_OR resolved as reduce (%left KEYWORD_OR).


State 106

   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   77     | expr KEYWORD_OR expr •  [KEYWORD_FOR, KEYWORD_OF, POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', KEYWORD_AND, KEYWORD_OR, ')', ':', ';', ']', ',']
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    $default  reduce using rule 77 (expr)

    Conflict between rule 77 and token POWER_OP resolved as reduce (POWER_OP < KEYWORD_OR).
    Conflict between rule 77 and token EQUAL_OP resolved as reduce (EQUAL_OP < KEYWORD_OR).
    Conflict between rule 77 and token NOTEQUAL_OP resolved as reduce (NOTEQUAL_OP < KEYWORD_OR).
    Conflict between rule 77 and token LESSTHAN_OP resolved as reduce (LESSTHAN_OP < KEYWORD_OR).
    Conflict between rule 77 and token LESSTHANEQUAL_OP resolved as reduce (LESSTHANEQUAL_OP < KEYWORD_OR).
    Conflict between rule 77 and token GREATERTHAN_OP resolved as reduce (GREATERTHAN_OP < KEYWORD_OR).
    Conflict between rule 77 and token GREATERTHANEQUAL_OP resolved as reduce (GREATERTHANEQUAL_OP < KEYWORD_OR).
    Conflict between rule 77 and token PLUSASSIGN_OP resolved as reduce (PLUSASSIGN_OP < KEYWORD_OR).
    Conflict between rule 77 and token MINUSASSIGN_OP resolved as reduce (MINUSASSIGN_OP < KEYWORD_OR).
    Conflict between rule 77 and token MULTASSIGN_OP resolved as reduce (MULTASSIGN_OP < KEYWORD_OR).
    Conflict between rule 77 and token DIVASSIGN_OP resolved as reduce (DIVASSIGN_OP < KEYWORD_OR).
    Conflict between rule 77 and token MODASSIGN_OP resolved as reduce (MODASSIGN_OP < KEYWORD_OR).
    Conflict between rule 77 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < KEYWORD_OR).
    Conflict between rule 77 and token '*' resolved as reduce ('*' < KEYWORD_OR).
    Conflict between rule 77 and token '/' resolved as reduce ('/' < KEYWORD_OR).
    Conflict between rule 77 and token '%' resolved as reduce ('%' < KEYWORD_OR).
    Conflict between rule 77 and token '+' resolved as reduce ('+' < KEYWORD_OR).
    Conflict between rule 77 and token '-' resolved as reduce ('-' < KEYWORD_OR).
    Conflict between rule 77 and token KEYWORD_AND resolved as reduce (%left KEYWORD_AND).
    Conflict between rule 77 and token KEYWORD_OR resolved as reduce (%left KEYWORD_OR).


State 107

   19 var_assign: ID '[' expr ']' ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 119


State 108

   18 var_assign: ID '=' expr ':' type • ';'

    ';'  shift, and go to state 120


State 109

    9 parameters: ID ':' • type
   11           | ID ':' • type ',' parameters
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 121


State 110

   10 parameters: ID '[' • ']' ':' type

    ']'  shift, and go to state 122


State 111

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' • '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    '-'  shift, and go to state 123


State 112

    2 func_body: ε •  [KEYWORD_ENDDEF]
    3          | • var_assign func_body
    4          | • conditions func_body
    5          | • func_decl func_body
    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' • func_body KEYWORD_ENDDEF ';'
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   12 call_func: • ID '(' func_input ')'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    ID                shift, and go to state 124
    KEYWORD_CONST     shift, and go to state 2
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_DEF       shift, and go to state 78
    KEYWORD_RETURN    shift, and go to state 130

    $default  reduce using rule 2 (func_body)

    func_body      go to state 131
    func_decl      go to state 132
    call_func      go to state 133
    var_assign     go to state 134
    var_update     go to state 135
    conditions     go to state 136
    complex_array  go to state 137


State 113

   52 comp_var_decl: HASHTAG_OP ID • ':' type ';'
   53              | HASHTAG_OP ID • ',' comp_var_decl

    ':'  shift, and go to state 138
    ','  shift, and go to state 139


State 114

   51 comp_body: func_decl comp_body •

    $default  reduce using rule 51 (comp_body)


State 115

   48 comp: KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP • ';'

    ';'  shift, and go to state 140


State 116

   50 comp_body: comp_var_decl comp_body •

    $default  reduce using rule 50 (comp_body)


State 117

   12 call_func: ID '(' func_input ')' •

    $default  reduce using rule 12 (call_func)


State 118

   12 call_func: • ID '(' func_input ')'
   13 func_input: ε •  [')']
   14           | • expr ',' func_input
   14           | expr ',' • func_input
   15           | • expr
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    $default  reduce using rule 13 (func_input)

    call_func   go to state 40
    func_input  go to state 141
    expr        go to state 84


State 119

   19 var_assign: ID '[' expr ']' ':' type • ';'

    ';'  shift, and go to state 142


State 120

   18 var_assign: ID '=' expr ':' type ';' •

    $default  reduce using rule 18 (var_assign)


State 121

    9 parameters: ID ':' type •  [')']
   11           | ID ':' type • ',' parameters

    ','  shift, and go to state 143

    $default  reduce using rule 9 (parameters)


State 122

   10 parameters: ID '[' ']' • ':' type

    ':'  shift, and go to state 144


State 123

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' • GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'

    GREATERTHAN_OP  shift, and go to state 145


State 124

   12 call_func: ID • '(' func_input ')'
   16 var_assign: ID • ':' type ';'
   17           | ID • ',' var_assign
   18           | ID • '=' expr ':' type ';'
   19           | ID • '[' expr ']' ':' type ';'
   21 var_update: ID • '=' expr ';'
   22           | ID • '[' expr ']' '=' expr ';'
   31 conditions: ID • ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | ID • '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   44 complex_array: ID • ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    '('  shift, and go to state 48
    ':'  shift, and go to state 146
    '['  shift, and go to state 147
    ','  shift, and go to state 13
    '='  shift, and go to state 148


State 125

   33 conditions: KEYWORD_IF • '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF • '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'

    '('  shift, and go to state 149


State 126

   35 conditions: KEYWORD_FOR • ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR • ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR • ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR • ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'

    ID  shift, and go to state 150


State 127

   39 conditions: KEYWORD_WHILE • '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'

    '('  shift, and go to state 151


State 128

   40 conditions: KEYWORD_BREAK • ';'

    ';'  shift, and go to state 152


State 129

   41 conditions: KEYWORD_CONTINUE • ';'

    ';'  shift, and go to state 153


State 130

   12 call_func: • ID '(' func_input ')'
   42 conditions: KEYWORD_RETURN • ';'
   43           | KEYWORD_RETURN • expr ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 154
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 155


State 131

    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body • KEYWORD_ENDDEF ';'

    KEYWORD_ENDDEF  shift, and go to state 156


State 132

    2 func_body: ε •  [KEYWORD_ENDDEF]
    3          | • var_assign func_body
    4          | • conditions func_body
    5          | • func_decl func_body
    5          | func_decl • func_body
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   12 call_func: • ID '(' func_input ')'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    ID                shift, and go to state 124
    KEYWORD_CONST     shift, and go to state 2
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_DEF       shift, and go to state 78
    KEYWORD_RETURN    shift, and go to state 130

    $default  reduce using rule 2 (func_body)

    func_body      go to state 157
    func_decl      go to state 132
    call_func      go to state 133
    var_assign     go to state 134
    var_update     go to state 135
    conditions     go to state 136
    complex_array  go to state 137


State 133

   29 conditions: call_func • ';'

    ';'  shift, and go to state 158


State 134

    2 func_body: ε •  [KEYWORD_ENDDEF]
    3          | • var_assign func_body
    3          | var_assign • func_body
    4          | • conditions func_body
    5          | • func_decl func_body
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   12 call_func: • ID '(' func_input ')'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    ID                shift, and go to state 124
    KEYWORD_CONST     shift, and go to state 2
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_DEF       shift, and go to state 78
    KEYWORD_RETURN    shift, and go to state 130

    $default  reduce using rule 2 (func_body)

    func_body      go to state 159
    func_decl      go to state 132
    call_func      go to state 133
    var_assign     go to state 134
    var_update     go to state 135
    conditions     go to state 136
    complex_array  go to state 137


State 135

   28 conditions: var_update •

    $default  reduce using rule 28 (conditions)


State 136

    2 func_body: ε •  [KEYWORD_ENDDEF]
    3          | • var_assign func_body
    4          | • conditions func_body
    4          | conditions • func_body
    5          | • func_decl func_body
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
   12 call_func: • ID '(' func_input ')'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    ID                shift, and go to state 124
    KEYWORD_CONST     shift, and go to state 2
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_DEF       shift, and go to state 78
    KEYWORD_RETURN    shift, and go to state 130

    $default  reduce using rule 2 (func_body)

    func_body      go to state 160
    func_decl      go to state 132
    call_func      go to state 133
    var_assign     go to state 134
    var_update     go to state 135
    conditions     go to state 136
    complex_array  go to state 137


State 137

   30 conditions: complex_array •

    $default  reduce using rule 30 (conditions)


State 138

   52 comp_var_decl: HASHTAG_OP ID ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 161


State 139

   52 comp_var_decl: • HASHTAG_OP ID ':' type ';'
   53              | • HASHTAG_OP ID ',' comp_var_decl
   53              | HASHTAG_OP ID ',' • comp_var_decl

    HASHTAG_OP  shift, and go to state 79

    comp_var_decl  go to state 162


State 140

   48 comp: KEYWORD_COMP ID ':' comp_body KEYWORD_ENDCOMP ';' •

    $default  reduce using rule 48 (comp)


State 141

   14 func_input: expr ',' func_input •

    $default  reduce using rule 14 (func_input)


State 142

   19 var_assign: ID '[' expr ']' ':' type ';' •

    $default  reduce using rule 19 (var_assign)


State 143

    8 parameters: ε •  [')']
    9           | • ID ':' type
   10           | • ID '[' ']' ':' type
   11           | • ID ':' type ',' parameters
   11           | ID ':' type ',' • parameters

    ID  shift, and go to state 75

    $default  reduce using rule 8 (parameters)

    parameters  go to state 163


State 144

   10 parameters: ID '[' ']' ':' • type
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 164


State 145

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP • type ':' func_body KEYWORD_ENDDEF ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 165


State 146

   16 var_assign: ID ':' • type ';'
   31 conditions: ID ':' • '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' • '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27
    '='              shift, and go to state 166

    type  go to state 28


State 147

   12 call_func: • ID '(' func_input ')'
   19 var_assign: ID '[' • expr ']' ':' type ';'
   22 var_update: ID '[' • expr ']' '=' expr ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 167


State 148

   12 call_func: • ID '(' func_input ')'
   18 var_assign: ID '=' • expr ':' type ';'
   21 var_update: ID '=' • expr ';'
   32 conditions: ID '=' • '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 168

    call_func  go to state 40
    expr       go to state 169


State 149

   12 call_func: • ID '(' func_input ')'
   33 conditions: KEYWORD_IF '(' • expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' • expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 170


State 150

   35 conditions: KEYWORD_FOR ID • KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID • KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID • KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID • KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'

    KEYWORD_IN  shift, and go to state 171


State 151

   12 call_func: • ID '(' func_input ')'
   39 conditions: KEYWORD_WHILE '(' • expr ')' ':' statements KEYWORD_ENDWHILE ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 172


State 152

   40 conditions: KEYWORD_BREAK ';' •

    $default  reduce using rule 40 (conditions)


State 153

   41 conditions: KEYWORD_CONTINUE ';' •

    $default  reduce using rule 41 (conditions)


State 154

   42 conditions: KEYWORD_RETURN ';' •  [ID, KEYWORD_CONST, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_ENDIF, KEYWORD_FOR, KEYWORD_ENDFOR, KEYWORD_WHILE, KEYWORD_ENDWHILE, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_DEF, KEYWORD_ENDDEF, KEYWORD_RETURN]
   85 expr: ';' •  [POWER_OP, EQUAL_OP, NOTEQUAL_OP, LESSTHAN_OP, LESSTHANEQUAL_OP, GREATERTHAN_OP, GREATERTHANEQUAL_OP, PLUSASSIGN_OP, MINUSASSIGN_OP, MULTASSIGN_OP, DIVASSIGN_OP, MODASSIGN_OP, KEYWORD_NOT, '*', '/', '%', '+', '-', KEYWORD_AND, KEYWORD_OR, ';']

    ID                reduce using rule 42 (conditions)
    KEYWORD_CONST     reduce using rule 42 (conditions)
    KEYWORD_IF        reduce using rule 42 (conditions)
    KEYWORD_ELSE      reduce using rule 42 (conditions)
    KEYWORD_ENDIF     reduce using rule 42 (conditions)
    KEYWORD_FOR       reduce using rule 42 (conditions)
    KEYWORD_ENDFOR    reduce using rule 42 (conditions)
    KEYWORD_WHILE     reduce using rule 42 (conditions)
    KEYWORD_ENDWHILE  reduce using rule 42 (conditions)
    KEYWORD_BREAK     reduce using rule 42 (conditions)
    KEYWORD_CONTINUE  reduce using rule 42 (conditions)
    KEYWORD_DEF       reduce using rule 42 (conditions)
    KEYWORD_ENDDEF    reduce using rule 42 (conditions)
    KEYWORD_RETURN    reduce using rule 42 (conditions)
    $default          reduce using rule 85 (expr)


State 155

   43 conditions: KEYWORD_RETURN expr • ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ';'                  shift, and go to state 173


State 156

    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF • ';'

    ';'  shift, and go to state 174


State 157

    5 func_body: func_decl func_body •

    $default  reduce using rule 5 (func_body)


State 158

   29 conditions: call_func ';' •

    $default  reduce using rule 29 (conditions)


State 159

    3 func_body: var_assign func_body •

    $default  reduce using rule 3 (func_body)


State 160

    4 func_body: conditions func_body •

    $default  reduce using rule 4 (func_body)


State 161

   52 comp_var_decl: HASHTAG_OP ID ':' type • ';'

    ';'  shift, and go to state 175


State 162

   53 comp_var_decl: HASHTAG_OP ID ',' comp_var_decl •

    $default  reduce using rule 53 (comp_var_decl)


State 163

   11 parameters: ID ':' type ',' parameters •

    $default  reduce using rule 11 (parameters)


State 164

   10 parameters: ID '[' ']' ':' type •

    $default  reduce using rule 10 (parameters)


State 165

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type • ':' func_body KEYWORD_ENDDEF ';'

    ':'  shift, and go to state 176


State 166

   31 conditions: ID ':' '=' • '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' '=' • '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    '['  shift, and go to state 177


State 167

   19 var_assign: ID '[' expr • ']' ':' type ';'
   22 var_update: ID '[' expr • ']' '=' expr ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 178


State 168

   12 call_func: • ID '(' func_input ')'
   32 conditions: ID '=' '[' • expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   84     | '[' • expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 179


State 169

   18 var_assign: ID '=' expr • ':' type ';'
   21 var_update: ID '=' expr • ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 74
    ';'                  shift, and go to state 180


State 170

   33 conditions: KEYWORD_IF '(' expr • ')' ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' expr • ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ')'                  shift, and go to state 181


State 171

   35 conditions: KEYWORD_FOR ID KEYWORD_IN • '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN • '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN • '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN • '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'

    '['  shift, and go to state 182


State 172

   39 conditions: KEYWORD_WHILE '(' expr • ')' ':' statements KEYWORD_ENDWHILE ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ')'                  shift, and go to state 183


State 173

   43 conditions: KEYWORD_RETURN expr ';' •

    $default  reduce using rule 43 (conditions)


State 174

    6 main_func: KEYWORD_DEF KEYWORD_MAIN '(' ')' ':' func_body KEYWORD_ENDDEF ';' •

    $default  reduce using rule 6 (main_func)


State 175

   52 comp_var_decl: HASHTAG_OP ID ':' type ';' •

    $default  reduce using rule 52 (comp_var_decl)


State 176

    2 func_body: ε •  [KEYWORD_ENDDEF]
    3          | • var_assign func_body
    4          | • conditions func_body
    5          | • func_decl func_body
    7 func_decl: • KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';'
    7          | KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' • func_body KEYWORD_ENDDEF ';'
   12 call_func: • ID '(' func_input ')'
   16 var_assign: • ID ':' type ';'
   17           | • ID ',' var_assign
   18           | • ID '=' expr ':' type ';'
   19           | • ID '[' expr ']' ':' type ';'
   20           | • KEYWORD_CONST var_assign
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    ID                shift, and go to state 124
    KEYWORD_CONST     shift, and go to state 2
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_DEF       shift, and go to state 78
    KEYWORD_RETURN    shift, and go to state 130

    $default  reduce using rule 2 (func_body)

    func_body      go to state 184
    func_decl      go to state 132
    call_func      go to state 133
    var_assign     go to state 134
    var_update     go to state 135
    conditions     go to state 136
    complex_array  go to state 137


State 177

   12 call_func: • ID '(' func_input ')'
   31 conditions: ID ':' '=' '[' • expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' '=' '[' • expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 185


State 178

   19 var_assign: ID '[' expr ']' • ':' type ';'
   22 var_update: ID '[' expr ']' • '=' expr ';'

    ':'  shift, and go to state 107
    '='  shift, and go to state 186


State 179

   32 conditions: ID '=' '[' expr • KEYWORD_FOR expr ':' expr ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr
   84     | '[' expr • ']'

    KEYWORD_FOR          shift, and go to state 187
    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 86


State 180

   21 var_update: ID '=' expr ';' •

    $default  reduce using rule 21 (var_update)


State 181

   33 conditions: KEYWORD_IF '(' expr ')' • ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' expr ')' • ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'

    ':'  shift, and go to state 188


State 182

   12 call_func: • ID '(' func_input ')'
   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' • expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN '[' • expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' • expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' • expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 189


State 183

   39 conditions: KEYWORD_WHILE '(' expr ')' • ':' statements KEYWORD_ENDWHILE ';'

    ':'  shift, and go to state 190


State 184

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body • KEYWORD_ENDDEF ';'

    KEYWORD_ENDDEF  shift, and go to state 191


State 185

   31 conditions: ID ':' '=' '[' expr • KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' '=' '[' expr • KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    KEYWORD_FOR          shift, and go to state 192
    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72


State 186

   12 call_func: • ID '(' func_input ')'
   22 var_update: ID '[' expr ']' '=' • expr ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 193


State 187

   12 call_func: • ID '(' func_input ')'
   32 conditions: ID '=' '[' expr KEYWORD_FOR • expr ':' expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 194


State 188

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   33           | KEYWORD_IF '(' expr ')' ':' • statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' expr ')' ':' • statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 198


State 189

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr • ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN '[' expr • ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr • ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr • ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 199


State 190

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   39           | KEYWORD_WHILE '(' expr ')' ':' • statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 200


State 191

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF • ';'

    ';'  shift, and go to state 201


State 192

   12 call_func: • ID '(' func_input ')'
   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR • expr ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR • expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 202


State 193

   22 var_update: ID '[' expr ']' '=' expr • ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ';'                  shift, and go to state 203


State 194

   32 conditions: ID '=' '[' expr KEYWORD_FOR expr • ':' expr ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 204


State 195

   12 call_func: ID • '(' func_input ')'
   21 var_update: ID • '=' expr ';'
   22           | ID • '[' expr ']' '=' expr ';'
   31 conditions: ID • ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | ID • '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   44 complex_array: ID • ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    '('  shift, and go to state 48
    ':'  shift, and go to state 205
    '['  shift, and go to state 206
    '='  shift, and go to state 207


State 196

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   45           | conditions •  [KEYWORD_ELSE, KEYWORD_ENDIF, KEYWORD_ENDFOR, KEYWORD_ENDWHILE]
   46           | • conditions more_conds
   46           | conditions • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    $default  reduce using rule 45 (more_conds)

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 208


State 197

   47 statements: more_conds •

    $default  reduce using rule 47 (statements)


State 198

   33 conditions: KEYWORD_IF '(' expr ')' ':' statements • KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' expr ')' ':' statements • KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'

    KEYWORD_ELSE   shift, and go to state 209
    KEYWORD_ENDIF  shift, and go to state 210


State 199

   12 call_func: • ID '(' func_input ')'
   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' • expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' • expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' • expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' • expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 211


State 200

   39 conditions: KEYWORD_WHILE '(' expr ')' ':' statements • KEYWORD_ENDWHILE ';'

    KEYWORD_ENDWHILE  shift, and go to state 212


State 201

    7 func_decl: KEYWORD_DEF ID '(' parameters ')' '-' GREATERTHAN_OP type ':' func_body KEYWORD_ENDDEF ';' •

    $default  reduce using rule 7 (func_decl)


State 202

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr • ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr • ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 213


State 203

   22 var_update: ID '[' expr ']' '=' expr ';' •

    $default  reduce using rule 22 (var_update)


State 204

   12 call_func: • ID '(' func_input ')'
   32 conditions: ID '=' '[' expr KEYWORD_FOR expr ':' • expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 214


State 205

   31 conditions: ID ':' • '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' • '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    '='  shift, and go to state 166


State 206

   12 call_func: • ID '(' func_input ')'
   22 var_update: ID '[' • expr ']' '=' expr ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 215


State 207

   12 call_func: • ID '(' func_input ')'
   21 var_update: ID '=' • expr ';'
   32 conditions: ID '=' • '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 168

    call_func  go to state 40
    expr       go to state 216


State 208

   46 more_conds: conditions more_conds •

    $default  reduce using rule 46 (more_conds)


State 209

   34 conditions: KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE • ':' statements KEYWORD_ENDIF ';'

    ':'  shift, and go to state 217


State 210

   33 conditions: KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF • ';'

    ';'  shift, and go to state 218


State 211

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr • '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr • '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr • '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr • '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 219
    '-'                  shift, and go to state 220
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72


State 212

   39 conditions: KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE • ';'

    ';'  shift, and go to state 221


State 213

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr ':' • DECIMAL ']' ':' type ';'
   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' • type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    DECIMAL          shift, and go to state 222
    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 223


State 214

   32 conditions: ID '=' '[' expr KEYWORD_FOR expr ':' expr • ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 224


State 215

   22 var_update: ID '[' expr • ']' '=' expr ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 225


State 216

   21 var_update: ID '=' expr • ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ';'                  shift, and go to state 180


State 217

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   34           | KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' • statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 226


State 218

   33 conditions: KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';' •

    $default  reduce using rule 33 (conditions)


State 219

   12 call_func: • ID '(' func_input ')'
   36 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' • expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' • expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   67     | expr '+' • expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 227


State 220

   12 call_func: • ID '(' func_input ')'
   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' • expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' • expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   68     | expr '-' • expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 228


State 221

   39 conditions: KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';' •

    $default  reduce using rule 39 (conditions)


State 222

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL • ']' ':' type ';'

    ']'  shift, and go to state 229


State 223

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type • KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'

    KEYWORD_IN  shift, and go to state 230


State 224

   32 conditions: ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' • ':' type ';'

    ':'  shift, and go to state 231


State 225

   22 var_update: ID '[' expr ']' • '=' expr ';'

    '='  shift, and go to state 186


State 226

   34 conditions: KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements • KEYWORD_ENDIF ';'

    KEYWORD_ENDIF  shift, and go to state 232


State 227

   36 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr • ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr • ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   67     | expr '+' expr •  [POWER_OP, KEYWORD_NOT, '*', '/', '%', '+', '-']
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 233
    ']'                  shift, and go to state 234

    $default  reduce using rule 67 (expr)

    Conflict between rule 67 and token POWER_OP resolved as reduce (POWER_OP < '+').
    Conflict between rule 67 and token EQUAL_OP resolved as shift ('+' < EQUAL_OP).
    Conflict between rule 67 and token NOTEQUAL_OP resolved as shift ('+' < NOTEQUAL_OP).
    Conflict between rule 67 and token LESSTHAN_OP resolved as shift ('+' < LESSTHAN_OP).
    Conflict between rule 67 and token LESSTHANEQUAL_OP resolved as shift ('+' < LESSTHANEQUAL_OP).
    Conflict between rule 67 and token GREATERTHAN_OP resolved as shift ('+' < GREATERTHAN_OP).
    Conflict between rule 67 and token GREATERTHANEQUAL_OP resolved as shift ('+' < GREATERTHANEQUAL_OP).
    Conflict between rule 67 and token PLUSASSIGN_OP resolved as shift ('+' < PLUSASSIGN_OP).
    Conflict between rule 67 and token MINUSASSIGN_OP resolved as shift ('+' < MINUSASSIGN_OP).
    Conflict between rule 67 and token MULTASSIGN_OP resolved as shift ('+' < MULTASSIGN_OP).
    Conflict between rule 67 and token DIVASSIGN_OP resolved as shift ('+' < DIVASSIGN_OP).
    Conflict between rule 67 and token MODASSIGN_OP resolved as shift ('+' < MODASSIGN_OP).
    Conflict between rule 67 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '+').
    Conflict between rule 67 and token '*' resolved as reduce ('*' < '+').
    Conflict between rule 67 and token '/' resolved as reduce ('/' < '+').
    Conflict between rule 67 and token '%' resolved as reduce ('%' < '+').
    Conflict between rule 67 and token '+' resolved as reduce (%left '+').
    Conflict between rule 67 and token '-' resolved as reduce (%left '-').
    Conflict between rule 67 and token KEYWORD_AND resolved as shift ('+' < KEYWORD_AND).
    Conflict between rule 67 and token KEYWORD_OR resolved as shift ('+' < KEYWORD_OR).


State 228

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr • ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr • ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   68     | expr '-' expr •  [POWER_OP, KEYWORD_NOT, '*', '/', '%', '+', '-']
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ':'                  shift, and go to state 235
    ']'                  shift, and go to state 236

    $default  reduce using rule 68 (expr)

    Conflict between rule 68 and token POWER_OP resolved as reduce (POWER_OP < '-').
    Conflict between rule 68 and token EQUAL_OP resolved as shift ('-' < EQUAL_OP).
    Conflict between rule 68 and token NOTEQUAL_OP resolved as shift ('-' < NOTEQUAL_OP).
    Conflict between rule 68 and token LESSTHAN_OP resolved as shift ('-' < LESSTHAN_OP).
    Conflict between rule 68 and token LESSTHANEQUAL_OP resolved as shift ('-' < LESSTHANEQUAL_OP).
    Conflict between rule 68 and token GREATERTHAN_OP resolved as shift ('-' < GREATERTHAN_OP).
    Conflict between rule 68 and token GREATERTHANEQUAL_OP resolved as shift ('-' < GREATERTHANEQUAL_OP).
    Conflict between rule 68 and token PLUSASSIGN_OP resolved as shift ('-' < PLUSASSIGN_OP).
    Conflict between rule 68 and token MINUSASSIGN_OP resolved as shift ('-' < MINUSASSIGN_OP).
    Conflict between rule 68 and token MULTASSIGN_OP resolved as shift ('-' < MULTASSIGN_OP).
    Conflict between rule 68 and token DIVASSIGN_OP resolved as shift ('-' < DIVASSIGN_OP).
    Conflict between rule 68 and token MODASSIGN_OP resolved as shift ('-' < MODASSIGN_OP).
    Conflict between rule 68 and token KEYWORD_NOT resolved as reduce (KEYWORD_NOT < '-').
    Conflict between rule 68 and token '*' resolved as reduce ('*' < '-').
    Conflict between rule 68 and token '/' resolved as reduce ('/' < '-').
    Conflict between rule 68 and token '%' resolved as reduce ('%' < '-').
    Conflict between rule 68 and token '+' resolved as reduce (%left '+').
    Conflict between rule 68 and token '-' resolved as reduce (%left '-').
    Conflict between rule 68 and token KEYWORD_AND resolved as shift ('-' < KEYWORD_AND).
    Conflict between rule 68 and token KEYWORD_OR resolved as shift ('-' < KEYWORD_OR).


State 229

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' • ':' type ';'

    ':'  shift, and go to state 237


State 230

   12 call_func: • ID '(' func_input ')'
   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN • expr KEYWORD_OF expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 238


State 231

   32 conditions: ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 239


State 232

   34 conditions: KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF • ';'

    ';'  shift, and go to state 240


State 233

   12 call_func: • ID '(' func_input ')'
   38 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' • expr ']' ':' statements KEYWORD_ENDFOR ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 241


State 234

   36 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' • ':' statements KEYWORD_ENDFOR ';'

    ':'  shift, and go to state 242


State 235

   12 call_func: • ID '(' func_input ')'
   37 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' • expr ']' ':' statements KEYWORD_ENDFOR ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 243


State 236

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' • ':' statements KEYWORD_ENDFOR ';'

    ':'  shift, and go to state 244


State 237

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 245


State 238

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr • KEYWORD_OF expr ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    KEYWORD_OF           shift, and go to state 246
    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72


State 239

   32 conditions: ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type • ';'

    ';'  shift, and go to state 247


State 240

   34 conditions: KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';' •

    $default  reduce using rule 34 (conditions)


State 241

   38 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr • ']' ':' statements KEYWORD_ENDFOR ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 248


State 242

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' • statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 249


State 243

   37 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr • ']' ':' statements KEYWORD_ENDFOR ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 250


State 244

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   35           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' • statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 251


State 245

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type • ';'

    ';'  shift, and go to state 252


State 246

   12 call_func: • ID '(' func_input ')'
   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF • expr ']' ':' type ';'
   54 expr: • ID
   55     | • DECIMAL
   56     | • REAL
   57     | • NUMBER
   58     | • call_func
   59     | • BOOLEAN_TRUE
   60     | • BOOLEAN_FALSE
   61     | • '+' expr
   62     | • '-' expr
   63     | • expr POWER_OP expr
   64     | • expr '*' expr
   65     | • expr '/' expr
   66     | • expr '%' expr
   67     | • expr '+' expr
   68     | • expr '-' expr
   69     | • '(' expr ')'
   70     | • expr EQUAL_OP expr
   71     | • expr NOTEQUAL_OP expr
   72     | • expr LESSTHAN_OP expr
   73     | • expr GREATERTHAN_OP expr
   74     | • expr LESSTHANEQUAL_OP expr
   75     | • expr GREATERTHANEQUAL_OP expr
   76     | • expr KEYWORD_AND expr
   77     | • expr KEYWORD_OR expr
   78     | • expr KEYWORD_NOT expr
   79     | • expr PLUSASSIGN_OP expr
   80     | • expr MINUSASSIGN_OP expr
   81     | • expr MULTASSIGN_OP expr
   82     | • expr DIVASSIGN_OP expr
   83     | • expr MODASSIGN_OP expr
   84     | • '[' expr ']'
   85     | • ';'

    ID             shift, and go to state 29
    NUMBER         shift, and go to state 30
    DECIMAL        shift, and go to state 31
    REAL           shift, and go to state 32
    BOOLEAN_TRUE   shift, and go to state 33
    BOOLEAN_FALSE  shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    ';'            shift, and go to state 38
    '['            shift, and go to state 39

    call_func  go to state 40
    expr       go to state 253


State 247

   32 conditions: ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';' •

    $default  reduce using rule 32 (conditions)


State 248

   38 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' • ':' statements KEYWORD_ENDFOR ';'

    ':'  shift, and go to state 254


State 249

   36 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements • KEYWORD_ENDFOR ';'

    KEYWORD_ENDFOR  shift, and go to state 255


State 250

   37 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' • ':' statements KEYWORD_ENDFOR ';'

    ':'  shift, and go to state 256


State 251

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements • KEYWORD_ENDFOR ';'

    KEYWORD_ENDFOR  shift, and go to state 257


State 252

   31 conditions: ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';' •

    $default  reduce using rule 31 (conditions)


State 253

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr • ']' ':' type ';'
   63 expr: expr • POWER_OP expr
   64     | expr • '*' expr
   65     | expr • '/' expr
   66     | expr • '%' expr
   67     | expr • '+' expr
   68     | expr • '-' expr
   70     | expr • EQUAL_OP expr
   71     | expr • NOTEQUAL_OP expr
   72     | expr • LESSTHAN_OP expr
   73     | expr • GREATERTHAN_OP expr
   74     | expr • LESSTHANEQUAL_OP expr
   75     | expr • GREATERTHANEQUAL_OP expr
   76     | expr • KEYWORD_AND expr
   77     | expr • KEYWORD_OR expr
   78     | expr • KEYWORD_NOT expr
   79     | expr • PLUSASSIGN_OP expr
   80     | expr • MINUSASSIGN_OP expr
   81     | expr • MULTASSIGN_OP expr
   82     | expr • DIVASSIGN_OP expr
   83     | expr • MODASSIGN_OP expr

    POWER_OP             shift, and go to state 53
    EQUAL_OP             shift, and go to state 54
    NOTEQUAL_OP          shift, and go to state 55
    LESSTHAN_OP          shift, and go to state 56
    LESSTHANEQUAL_OP     shift, and go to state 57
    GREATERTHAN_OP       shift, and go to state 58
    GREATERTHANEQUAL_OP  shift, and go to state 59
    PLUSASSIGN_OP        shift, and go to state 60
    MINUSASSIGN_OP       shift, and go to state 61
    MULTASSIGN_OP        shift, and go to state 62
    DIVASSIGN_OP         shift, and go to state 63
    MODASSIGN_OP         shift, and go to state 64
    KEYWORD_NOT          shift, and go to state 65
    '*'                  shift, and go to state 66
    '/'                  shift, and go to state 67
    '%'                  shift, and go to state 68
    '+'                  shift, and go to state 69
    '-'                  shift, and go to state 70
    KEYWORD_AND          shift, and go to state 71
    KEYWORD_OR           shift, and go to state 72
    ']'                  shift, and go to state 258


State 254

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   38           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' • statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 259


State 255

   36 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR • ';'

    ';'  shift, and go to state 260


State 256

   12 call_func: • ID '(' func_input ')'
   21 var_update: • ID '=' expr ';'
   22           | • ID '[' expr ']' '=' expr ';'
   28 conditions: • var_update
   29           | • call_func ';'
   30           | • complex_array
   31           | • ID ':' '=' '[' expr KEYWORD_FOR expr ':' DECIMAL ']' ':' type ';'
   32           | • ID '=' '[' expr KEYWORD_FOR expr ':' expr ']' ':' type ';'
   33           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ENDIF ';'
   34           | • KEYWORD_IF '(' expr ')' ':' statements KEYWORD_ELSE ':' statements KEYWORD_ENDIF ';'
   35           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';'
   36           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   37           | KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' • statements KEYWORD_ENDFOR ';'
   38           | • KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';'
   39           | • KEYWORD_WHILE '(' expr ')' ':' statements KEYWORD_ENDWHILE ';'
   40           | • KEYWORD_BREAK ';'
   41           | • KEYWORD_CONTINUE ';'
   42           | • KEYWORD_RETURN ';'
   43           | • KEYWORD_RETURN expr ';'
   44 complex_array: • ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';'
   45 more_conds: • conditions
   46           | • conditions more_conds
   47 statements: • more_conds

    ID                shift, and go to state 195
    KEYWORD_IF        shift, and go to state 125
    KEYWORD_FOR       shift, and go to state 126
    KEYWORD_WHILE     shift, and go to state 127
    KEYWORD_BREAK     shift, and go to state 128
    KEYWORD_CONTINUE  shift, and go to state 129
    KEYWORD_RETURN    shift, and go to state 130

    call_func      go to state 133
    var_update     go to state 135
    conditions     go to state 196
    complex_array  go to state 137
    more_conds     go to state 197
    statements     go to state 261


State 257

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR • ';'

    ';'  shift, and go to state 262


State 258

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' • ':' type ';'

    ':'  shift, and go to state 263


State 259

   38 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements • KEYWORD_ENDFOR ';'

    KEYWORD_ENDFOR  shift, and go to state 264


State 260

   36 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ']' ':' statements KEYWORD_ENDFOR ';' •

    $default  reduce using rule 36 (conditions)


State 261

   37 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements • KEYWORD_ENDFOR ';'

    KEYWORD_ENDFOR  shift, and go to state 265


State 262

   35 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ']' ':' statements KEYWORD_ENDFOR ';' •

    $default  reduce using rule 35 (conditions)


State 263

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' • type ';'
   86 type: • KEYWORD_SCALAR
   87     | • KEYWORD_INTEGER
   88     | • KEYWORD_STR
   89     | • KEYWORD_BOOLEAN

    KEYWORD_INTEGER  shift, and go to state 24
    KEYWORD_SCALAR   shift, and go to state 25
    KEYWORD_STR      shift, and go to state 26
    KEYWORD_BOOLEAN  shift, and go to state 27

    type  go to state 266


State 264

   38 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR • ';'

    ';'  shift, and go to state 267


State 265

   37 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR • ';'

    ';'  shift, and go to state 268


State 266

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type • ';'

    ';'  shift, and go to state 269


State 267

   38 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '+' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';' •

    $default  reduce using rule 38 (conditions)


State 268

   37 conditions: KEYWORD_FOR ID KEYWORD_IN '[' expr ':' expr '-' expr ':' expr ']' ':' statements KEYWORD_ENDFOR ';' •

    $default  reduce using rule 37 (conditions)


State 269

   44 complex_array: ID ':' '=' '[' expr KEYWORD_FOR expr ':' type KEYWORD_IN expr KEYWORD_OF expr ']' ':' type ';' •

    $default  reduce using rule 44 (complex_array)
